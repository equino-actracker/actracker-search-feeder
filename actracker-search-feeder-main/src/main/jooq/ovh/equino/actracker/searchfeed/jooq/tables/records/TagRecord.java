/*
 * This file is generated by jOOQ.
 */
package ovh.equino.actracker.searchfeed.jooq.tables.records;


import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ovh.equino.actracker.searchfeed.jooq.tables.Tag;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TagRecord extends UpdatableRecordImpl<TagRecord> implements Record4<String, Long, Boolean, JSONB> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.tag.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.tag.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.tag.version</code>.
     */
    public void setVersion(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.tag.version</code>.
     */
    public Long getVersion() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.tag.deleted</code>.
     */
    public void setDeleted(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.tag.deleted</code>.
     */
    public Boolean getDeleted() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>public.tag.entity</code>.
     */
    public void setEntity(JSONB value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.tag.entity</code>.
     */
    public JSONB getEntity() {
        return (JSONB) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, Long, Boolean, JSONB> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, Long, Boolean, JSONB> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Tag.TAG.ID;
    }

    @Override
    public Field<Long> field2() {
        return Tag.TAG.VERSION;
    }

    @Override
    public Field<Boolean> field3() {
        return Tag.TAG.DELETED;
    }

    @Override
    public Field<JSONB> field4() {
        return Tag.TAG.ENTITY;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getVersion();
    }

    @Override
    public Boolean component3() {
        return getDeleted();
    }

    @Override
    public JSONB component4() {
        return getEntity();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getVersion();
    }

    @Override
    public Boolean value3() {
        return getDeleted();
    }

    @Override
    public JSONB value4() {
        return getEntity();
    }

    @Override
    public TagRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public TagRecord value2(Long value) {
        setVersion(value);
        return this;
    }

    @Override
    public TagRecord value3(Boolean value) {
        setDeleted(value);
        return this;
    }

    @Override
    public TagRecord value4(JSONB value) {
        setEntity(value);
        return this;
    }

    @Override
    public TagRecord values(String value1, Long value2, Boolean value3, JSONB value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TagRecord
     */
    public TagRecord() {
        super(Tag.TAG);
    }

    /**
     * Create a detached, initialised TagRecord
     */
    public TagRecord(String id, Long version, Boolean deleted, JSONB entity) {
        super(Tag.TAG);

        setId(id);
        setVersion(version);
        setDeleted(deleted);
        setEntity(entity);
    }
}
