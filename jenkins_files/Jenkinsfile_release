pipeline {
    agent any

    tools {
        jdk 'jdk17'
    }

    environment {
        GH_ORG = 'marcinciapa'
        GH_REPO = 'actracker-search-feeder'
    }

    options {
        lock resource: 'actracker-search-feeder_release'
        buildDiscarder(logRotator(numToKeepStr: '5'))
    }

    stages {

//        stage('Check release readiness') {
//            steps {
//                sh 'git branch -m ${CHANGE_BRANCH}'
//                sh './gradlew --no-daemon --stacktrace verifyRelease'
//                sh 'if curl -L https://api.github.com/repos/${GH_ORG}/${GH_REPO}/pulls/${CHANGE_ID} | grep \'"mergeable": true\'; then exit 0; else echo "PR is not mergeable"; exit 1; fi;'
//                sh 'if curl -L https://api.github.com/repos/${GH_ORG}/${GH_REPO}/commits/${GIT_COMMIT}/statuses | grep \'"state": "success"\'; then exit 0; else echo "Commit check with success state not found"; exit 1; fi;'
//            }
//        }

        stage('Build') {
            steps {
                sh './mvnw clean verify'
//                script {
//                    currentBuild.displayName = readFile file: 'build/ovh.equino.version/currentVersion'
//                }
            }
        }

//        stage('DB schema migration') {
//            steps {
//                sh './gradlew --no-daemon --stacktrace :actracker-api-persistence-postgres:flywayMigrate :actracker-api-persistence-postgres:flywayInfo -PequinoDocker.remote -Pdeploy.environment=PROD'
//            }
//        }

//        stage('Deploy') {
//            steps {
//                sh './gradlew --no-daemon --stacktrace k8sResource'
//                withKubeConfig([credentialsId: 'MadritKubeConfig', namespace: 'equino-prod']) {
//                    sh './gradlew --no-daemon --stacktrace k8sResource k8sApply -Prelease.ignoreUncommittedChanges'
//                }
//            }
//        }

        stage('Merge PR') {
            steps {
                withCredentials([string(credentialsId: 'JenkinsGitHubPluginClassicToken', variable: 'TOKEN')]) {
                    sh 'curl -L -H "Authorization: Bearer ${TOKEN}" -X PUT https://api.github.com/repos/${GH_ORG}/${GH_REPO}/pulls/${CHANGE_ID}/merge -d \'{"merge_method": "squash"}\''
                    sh 'curl -L -H "Authorization: Bearer ${TOKEN}" -X DELETE https://api.github.com/repos/${GH_ORG}/${GH_REPO}/git/refs/heads/${CHANGE_BRANCH}'
                }
            }
        }

    }

    post {
        cleanup {
            deleteDir()
        }
    }
}
